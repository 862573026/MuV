package com.newx.entity.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.newx.entity.base.AuthInfo;
import com.newx.entity.base.User;
import com.newx.entity.local.VideoInfo;

import com.newx.entity.gen.AuthInfoDao;
import com.newx.entity.gen.UserDao;
import com.newx.entity.gen.VideoInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig authInfoDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig videoInfoDaoConfig;

    private final AuthInfoDao authInfoDao;
    private final UserDao userDao;
    private final VideoInfoDao videoInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        authInfoDaoConfig = daoConfigMap.get(AuthInfoDao.class).clone();
        authInfoDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        videoInfoDaoConfig = daoConfigMap.get(VideoInfoDao.class).clone();
        videoInfoDaoConfig.initIdentityScope(type);

        authInfoDao = new AuthInfoDao(authInfoDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        videoInfoDao = new VideoInfoDao(videoInfoDaoConfig, this);

        registerDao(AuthInfo.class, authInfoDao);
        registerDao(User.class, userDao);
        registerDao(VideoInfo.class, videoInfoDao);
    }
    
    public void clear() {
        authInfoDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        videoInfoDaoConfig.clearIdentityScope();
    }

    public AuthInfoDao getAuthInfoDao() {
        return authInfoDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public VideoInfoDao getVideoInfoDao() {
        return videoInfoDao;
    }

}
