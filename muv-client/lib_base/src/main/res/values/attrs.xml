<?xml version="1.0" encoding="utf-8"?>
<resources>
    <declare-styleable name="FloatingSearchView">
        <attr name="floatingSearch_searchBarWidth" format="dimension"/>
        <attr name="floatingSearch_searchBarMarginTop" format="dimension"/>
        <attr name="floatingSearch_searchBarMarginLeft" format="dimension"/>
        <attr name="floatingSearch_searchBarMarginRight" format="dimension"/>
        <attr name="floatingSearch_searchSuggestionTextSize" format="dimension"/>
        <attr name="floatingSearch_searchInputTextSize" format="dimension"/>
        <attr name="floatingSearch_showMenuAction" format="boolean"/>
        <attr name="floatingSearch_dismissFocusOnItemSelection" format="boolean"/>
        <attr name="floatingSearch_leftActionMode">
            <enum name="showHamburger" value="1" />
            <enum name="showSearch" value="2" />
            <enum name="showHome" value="3" />
            <enum name="noLeftAction" value="4" />
        </attr>
        <attr name="floatingSearch_showVoiceInput" format="boolean"/>
        <attr name="floatingSearch_showSearchKey" format="boolean"/>
        <attr name="floatingSearch_voiceRecHint" format="string"/>
        <attr name="floatingSearch_searchHint" format="string"/>
        <attr name="floatingSearch_dismissOnOutsideTouch" format="boolean"/>
        <attr name="floatingSearch_showMoveSuggestionUp" format="boolean"/>
        <attr name="floatingSearch_suggestionsListAnimDuration" format="integer"/>
        <attr name="floatingSearch_hideOverflowMenuWhenFocused" format="boolean"/>
        <attr name="floatingSearch_showOverFlowMenu" format="boolean"/>
        <attr name="floatingSearch_close_search_on_keyboard_dismiss" format="boolean"/>
        <attr name="floatingSearch_menu" format="reference"/>
        <attr name="floatingSearch_leftActionColor" format="color"/>
        <attr name="floatingSearch_viewTextColor" format="color"/>
        <attr name="floatingSearch_viewSearchInputTextColor" format="color"/>
        <attr name="floatingSearch_hintTextColor" format="color"/>
        <attr name="floatingSearch_viewSuggestionItemTextColor" format="color"/>
        <attr name="floatingSearch_menuItemIconColor" format="color"/>
        <attr name="floatingSearch_actionMenuOverflowColor" format="color"/>
        <attr name="floatingSearch_clearBtnColor" format="color"/>
        <attr name="floatingSearch_backgroundColor" format="color"/>
        <attr name="floatingSearch_dividerColor" format="color"/>
        <attr name="floatingSearch_dimBackground" format="boolean"/>
        <attr name="floatingSearch_suggestionRightIconColor" format="color"/>
    </declare-styleable>

    <declare-styleable name="AutoFitTextView">
        <!-- Minimum size of the text. -->
        <attr name="minTextSize" format="dimension" />
        <!-- Amount of precision used to calculate the correct text size to fit within its
        bounds. Lower precision is more precise and takes more time. -->
        <attr name="precision" format="float" />
        <!-- Defines whether to automatically resize text to fit to the view's bounds. -->
        <attr name="sizeToFit" format="boolean" />
    </declare-styleable>


    <!--<declare-styleable name="CircleImageView">-->
        <!--<attr name="civ_border_width" format="dimension" />-->
        <!--<attr name="civ_border_color" format="color" />-->
        <!--<attr name="civ_border_overlay" format="boolean" />-->
        <!--&lt;!&ndash; {@deprecated Use civ_circlebackground_color instead.} &ndash;&gt;-->
        <!--<attr name="civ_fill_color" format="color" />-->
        <!--<attr name="civ_circle_background_color" format="color" />-->
    <!--</declare-styleable>-->


    <declare-styleable name="DirectionalViewPager">
        <attr name="orientation" format="enum">
            <enum name="horizontal" value="0"></enum>
            <enum name="vertical" value="1"></enum>
        </attr>
    </declare-styleable>

    <!-- require List<ViewModel> bind to ItemView to presentation.-->
    <!--<attr name="items" format="reference" />-->

    <!--<attr name="onClickCommand" format="reference" />-->
    <!--<attr name="onLongClickCommand" format="reference" />-->

    <!--<declare-styleable name="RecyclerView" parent="AdapterView">-->
        <!--<attr name="lineManager" format="reference" />-->
    <!--</declare-styleable>-->


    <!--<declare-styleable name="View">-->
        <!--&lt;!&ndash; require BindingCommand {@link com.kelin.mvvmlight.command.BindingCommand } to deal with view click event. &ndash;&gt;-->
        <!--<attr name="onClickCommand" />-->
        <!--<attr name="onLongClickCommand" />-->
        <!--&lt;!&ndash; require BindingCommand<Boolean> {@link com.kelin.mvvmlight.command.BindingCommand } to deal with view focus change event.-->
         <!--BindingCommand would has params which means if view hasFocus.&ndash;&gt;-->
        <!--<attr name="onFocusChangeCommand" />-->
        <!--&lt;!&ndash; require BindingCommand<MotionEvent> &ndash;&gt;-->
        <!--<attr name="onTouchCommand" />-->
        <!--<attr name="isThrottleFirst" />-->
        <!--<attr name="currentView" />-->
    <!--</declare-styleable>-->

</resources>